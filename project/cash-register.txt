function checkCashRegister(price, cash, cid) {
  var left = cash - price;

  var change = {
    status : "OPEN", 
    change : []
  };

  var temp = [
    {name : "PENNY", val : 0.01},
    {name : "NICKEL", val : 0.05},
    {name : "DIME", val : 0.1},
    {name : "QUARTER", val : 0.25},
    {name : "ONE", val : 1},
    {name : "FIVE", val : 5},
    {name : "TEN", val : 10},
    {name : "TWENTY", val : 20},
    {name : "ONE HUNDRED", val : 100}
  ];
  var currency = temp.reverse();
  // console.log(currency)

  var register = cid.reduce(
    function(acc, curr) {
      acc.total += curr[1];
      acc[curr[0]] = curr[1];
      return acc;
    },
    { total: 0 }
  );
  // console.log(register.total, left)

  if (register.total === left) {
    change.status = "CLOSED";
    change.change = cid;
    // console.log(change)
    return change;
  }
  
  if (register.total < left) {
    change.status = "INSUFFICIENT_FUNDS";
    return change;
  }

  // Loop through the denomination array
  var change_arr = currency.reduce(function(acc, curr) {
    var value = 0;
    // While there is still money of this type in the drawer
    // And while the denomination is larger than the change remaining
    while (register[curr.name] > 0 && left >= curr.val) {
      left -= curr.val;
      register[curr.name] -= curr.val;
      value += curr.val;

      // Round change to the nearest hundreth deals with precision errors
      left = Math.round(left * 100) / 100;
    }
    // Add this denomination to the output only if any was used.
    if (value > 0) {
      acc.push([curr.name, value]);
    }
    return acc; // Return the current change_arr
  }, []); // Initial value of empty array for reduce

  // If there are no elements in change_arr or we have leftover change, return
  // the string "Insufficient Funds"

  if (change_arr.length < 1 || left > 0) {
    change.status = "INSUFFICIENT_FUNDS";
    return change;
  }

  change.status = "OPEN";
  change.change = change_arr;
  return change;
}

checkCashRegister(19.5, 20, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]])

